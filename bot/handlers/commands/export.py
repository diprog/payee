import aiofiles.os
from aiogram.filters import Command
from aiogram.types import CallbackQuery
from aiogram.types import FSInputFile, Message

import db
import excel
import sheets.worksheets
import sheets.worksheets.owners
from bot import router
from bot.callback_data import GenerateJournalSelectUser, GenerateJournal
from bot.inline_keyboards import generate_journal_menu
from db.models.requests import RequestStatuses
from sheets.sheets import User

FIRST_MESSAGE = '–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ –∫–∞–∫–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∂—É—Ä–Ω–∞–ª, –∏ –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "ü™Ñ *–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å*".\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "ü´Ç *–ü–æ –≤—Å–µ–º*", —á—Ç–æ–±—ã —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∂—É—Ä–Ω–∞–ª—ã –ø–æ –≤—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º.'
SPLITTER = '\n\n–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:\n'


async def generate_journal(message: Message, user: User):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∂—É—Ä–Ω–∞–ª –ø–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–∞–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.

    :param message: –æ–±—ä–µ–∫—Ç Message, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –æ—Ç–≤–µ—Ç—ã –≤ –≤–∏–¥–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    :param user: –æ–±—ä–µ–∫—Ç User, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    :return: None
    """
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
    requests: list[db.requests.Request] = []

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ç–∞—Ç—É—Å—É "–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ"
    for request in await db.requests.get():
        if request.from_username == user.username and request.status == RequestStatuses.APPROVED:
            requests.append(request)

    # –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∑–∞–ø–∏—Å–µ–π
    if not requests:
        await message.answer(f'–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ {user.name}.')
        return

    filepath = excel.generate_journal(requests)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ Excel –≤ –∫–∞—á–µ—Å—Ç–≤–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    file = FSInputFile(filepath, filename=f"–ñ—É—Ä–Ω–∞–ª ({user.name}).xlsx")
    await message.answer_document(file, caption=f'*–ó–∞–ø–∏—Å–µ–π:* {len(requests)}')

    # –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –¥–∏—Å–∫–∞.
    await aiofiles.os.remove(filepath)


def get_names_from_message(message):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è.

    :param message: –æ–±—ä–µ–∫—Ç Message, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
    :return: —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    """
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –∏–º–µ–Ω
    names = []

    # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π, –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if SPLITTER in message.text:
        names = message.text.split(SPLITTER)[-1].split('\n')

    return names


@router.message(Command('export'))
async def command_export_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /export, –∑–∞–ø—É—Å–∫–∞—é—â—É—é –ø—Ä–æ—Ü–µ—Å—Å —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö.

    :param message: –æ–±—ä–µ–∫—Ç Message, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
    :return: None
    """
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å—É—é—â–∏–º, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞
    if sheets.worksheets.owners.get(message.from_user.username):
        await message.reply(FIRST_MESSAGE, reply_markup=generate_journal_menu())
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å—É—é—â–∏–º, –Ω–æ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º,
    # –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞ —ç—Ç–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    elif user := sheets.worksheets.users.get(message.from_user.username):
        await generate_journal(message, user)
    else:
        await message.reply('‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.')


@router.callback_query(GenerateJournalSelectUser.filter())
async def generate_journal_select_user(query: CallbackQuery, callback_data: GenerateJournalSelectUser):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback-–∑–∞–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤—ã–±–æ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞.

    :param query: –æ–±—ä–µ–∫—Ç CallbackQuery, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ callback-–∑–∞–ø—Ä–æ—Å–µ
    :param callback_data: –æ–±—ä–µ–∫—Ç GenerateJournalSelectUser, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ callback-–∑–∞–ø—Ä–æ—Å–∞
    :return: None
    """
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ-—Å–æ–≥–ª–∞—Å—É—é—â–µ–º
    owner = sheets.worksheets.owners.get(query.from_user.username)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å—É—é—â–∏–º, –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    if not owner:
        await query.answer('‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Ä–æ–ª–∏ –°–æ–≥–ª–∞—Å—É—â–µ–≥–æ.', show_alert=True)
        return

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –æ–ø—Ü–∏—è "all", —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –∂—É—Ä–Ω–∞–ª—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if callback_data.username == 'all':
        await query.message.edit_text('‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ —Å—Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –≤—Å–µ –∂—É—Ä–Ω–∞–ª—ã...')
        for user in sheets.worksheets.users.get():
            await generate_journal(query.message, user)
        await query.message.delete()
        return

    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    names = get_names_from_message(query.message)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user = sheets.worksheets.users.get(callback_data.username)

    # –ï—Å–ª–∏ –∏–º—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ, –æ–Ω–æ —É–¥–∞–ª—è–µ—Ç—Å—è
    # –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –∏–º—è –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ —Å–ø–∏—Å–æ–∫
    if user.name in names:
        names.remove(user.name)
    else:
        names.append(user.name)

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–∏–º —Å–ø–∏—Å–∫–æ–º –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if names:
        await query.message.edit_text(
            f'–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å", –∫–∞–∫ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã.{SPLITTER}' + '\n'.join(names),
            reply_markup=generate_journal_menu(names))
    else:
        await query.message.edit_text(
            FIRST_MESSAGE,
            reply_markup=generate_journal_menu())


@router.callback_query(GenerateJournal.filter())
async def generate_journal_callback(query: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback-–∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞.

    :param query: –æ–±—ä–µ–∫—Ç CallbackQuery, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ callback-–∑–∞–ø—Ä–æ—Å–µ
    :return: None
    """
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ-—Å–æ–≥–ª–∞—Å—É—é—â–µ–º
    owner = sheets.worksheets.owners.get(query.from_user.username)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å—É—é—â–∏–º, –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    if not owner:
        await query.answer('–£ –≤–∞—Å –Ω–µ—Ç —Ä–æ–ª–∏ –°–æ–≥–ª–∞—Å—É—â–µ–≥–æ.', show_alert=True)
        return

    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    names = get_names_from_message(query.message)
    print(names)
    if not names:
        await query.answer('‚ùï –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –ø–æ –∫–æ—Ç–æ—Ä—ã–º —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∂—É—Ä–Ω–∞–ª—ã.',
                           show_alert=True)
        return

    # –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∂—É—Ä–Ω–∞–ª–æ–≤
    await query.message.edit_text('‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ —Å—Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –≤—Å–µ –∂—É—Ä–Ω–∞–ª—ã...')

    # –ü–µ—Ä–µ–±–æ—Ä –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for user in sheets.worksheets.users.get():
        # –ï—Å–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∂—É—Ä–Ω–∞–ª
        if user.name in names:
            await generate_journal(query.message, user)

    # –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –∂—É—Ä–Ω–∞–ª–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª—è–µ—Ç—Å—è
    await query.message.delete()
