import asyncio

from aiogram.types import Message

import constants
import sheets.worksheets
from db.models.requests import Request


def is_main_admin(user_id: int):
    return user_id in (constants.DEVELOPER_ID, *constants.MAIN_ADMIN_ID)


async def delete_message_after_delay(message: Message, seconds: int):
    await asyncio.sleep(seconds)
    await message.delete()


def prep_md(string: str) -> str:
    """
    –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å—Ç—Ä–æ–∫–∏ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Markdown.

    –í Markdown –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–º–µ—é—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–∏–º–≤–æ–ª—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞.
    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è "—ç–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç" —Ç–∞–∫–∏–µ —Å–∏–º–≤–æ–ª—ã –≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, –¥–æ–±–∞–≤–ª—è—è –ø–µ—Ä–µ–¥ –Ω–∏–º–∏ —Å–∏–º–≤–æ–ª –æ–±—Ä–∞—Ç–Ω–æ–≥–æ —Å–ª—ç—à–∞.
    –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é —ç—Ç–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∫–∞–∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ Markdown.

    :param string: –ò—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—É—é —Å–ª–µ–¥—É–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å.
    :return: –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
    """

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–µ–≥–æ '\'
    escape_chars = '_*[]()~`>#-|=+{}.!\\'

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö
    pre_code_escape_chars = '`\\'
    link_emoji_escape_chars = ')\\'

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–º–µ—Å—Ç–æ –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π –∫—É—Ä—Å–∏–≤–∞ –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
    ambiguity_char = '\r'

    # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–µ–≥–æ '\'
    escaped_string = ''
    i = 0
    while i < len(string):
        char = string[i]
        if char == '\\':
            # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ —Å –ø–æ–º–æ—â—å—é –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–µ–≥–æ '\'
            next_char = string[i + 1] if i + 1 < len(string) else ''
            if next_char in (escape_chars + pre_code_escape_chars + link_emoji_escape_chars):
                escaped_string += next_char
                i += 1
            else:
                escaped_string += char
        elif char in escape_chars:
            # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ —Å –ø–æ–º–æ—â—å—é –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–µ–≥–æ '\'
            escaped_string += '\\' + char
        elif char == '`':
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞ –∫–æ–¥–∞, –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            if '`' in escaped_string[-3:] or '`' in string[i + 1:i + 4]:
                escaped_string += '\\' + char
            else:
                escaped_string += char
        elif char == '(':
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –∏–ª–∏ emoji, –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ')' –∏ '\'
            if '[' in escaped_string[-3:] and ']' not in escaped_string[-3:]:
                j = i + 1
                while j < len(string):
                    if string[j] == ']':
                        break
                    elif string[j] == ')':
                        escaped_string += '\\' + string[j]
                        i = j
                        break
                    elif string[j] == '\\':
                        escaped_string += '\\' + string[j]
                        j += 1
                    else:
                        escaped_string += string[j]
                        j += 1
                else:
                    escaped_string += char
            else:
                escaped_string += char
        elif char == '_':
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ–π —Å—É—â–Ω–æ—Å—Ç–∏ –∫—É—Ä—Å–∏–≤–∞ –∏–ª–∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è,
            # –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            if '_' in escaped_string[-3:] or '_' in string[i + 1:i + 4]:
                escaped_string += ambiguity_char
            else:
                escaped_string += char
        else:
            escaped_string += char
        i += 1

    return escaped_string


def parse_request(request: Request, include_sender=True, edited_request=None) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É.

    :param request: –û–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å.
    :param include_sender: –§–ª–∞–≥, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π, —Å–ª–µ–¥—É–µ—Ç –ª–∏ –≤–∫–ª—é—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ –≤ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.
    :param edited_request: –û–±—ä–µ–∫—Ç –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å.
    :return: –°—Ç—Ä–æ–∫–∞ —Å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–ø—Ä–æ—Å–µ.
    """
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ –∏–∑ –ª–∏—Å—Ç–∞ Google Sheets
    employee = sheets.worksheets.users.get(request.from_username)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ
    employee_text = f'{prep_md(employee.name)} \\(@{prep_md(employee.username)}\\)'

    # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, —Ç–æ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
    sender = f'{employee_text} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ –∏ –æ–ø–ª–∞—Ç—É\\.'

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–ø—Ä–æ—Å–µ
    object = f'üè† *–û–±—ä–µ–∫—Ç:* {prep_md(request.object)}'
    counterparty = f'üë§ *–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç:* {prep_md(request.counterparty)}'
    money = f'üßæ *–°—É–º–º–∞:* {prep_md(request.money)}'
    comment = f'üìù *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:* {prep_md(request.comment)}'

    # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω, —Ç–æ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
    if edited_request:
        sender = f'{employee_text} –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª –∑–∞–ø—Ä–æ—Å\\.'
        if request.object != edited_request.object:
            object += f' *\\=\\>* {prep_md(edited_request.object)}'
        if request.counterparty != edited_request.counterparty:
            counterparty += f' *\\=\\>* {prep_md(edited_request.counterparty)}'
        if request.money != edited_request.money:
            money += f' *\\=\\>* {prep_md(edited_request.money)}'
        if request.comment != edited_request.comment:
            comment += f' *\\=\\>* {prep_md(edited_request.comment)}'

    # –ï—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ –≤–∫–ª—é—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ, —Ç–æ —É–¥–∞–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
    if not include_sender:
        sender = ''

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    return f'{sender}\n\n{object}\n\n{counterparty}\n\n{money}\n\n{comment}'


SPLITTER = prep_md('\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ')
